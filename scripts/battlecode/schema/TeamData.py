# automatically generated by the FlatBuffers compiler, do not modify

# namespace: schema

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

# Data relevant to a particular team.
class TeamData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = TeamData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsTeamData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # TeamData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # The name of the team.
    # TeamData
    def Name(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The java package the team uses.
    # TeamData
    def PackageName(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # The ID of the team this data pertains to.
    # TeamData
    def TeamId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int8Flags, o + self._tab.Pos)
        return 0

def TeamDataStart(builder): builder.StartObject(3)
def Start(builder):
    return TeamDataStart(builder)
def TeamDataAddName(builder, name): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(name), 0)
def AddName(builder, name):
    return TeamDataAddName(builder, name)
def TeamDataAddPackageName(builder, packageName): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(packageName), 0)
def AddPackageName(builder, packageName):
    return TeamDataAddPackageName(builder, packageName)
def TeamDataAddTeamId(builder, teamId): builder.PrependInt8Slot(2, teamId, 0)
def AddTeamId(builder, teamId):
    return TeamDataAddTeamId(builder, teamId)
def TeamDataEnd(builder): return builder.EndObject()
def End(builder):
    return TeamDataEnd(builder)